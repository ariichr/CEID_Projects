Terminals unused in grammar

    "unknown"


Grammar

    0 $accept: program T_EOF

    1 program: "program" "id" "new line" structs "new line" functions "new line" main
    2        | "program" "id" "new line" functions "new line" main
    3        | "program" "id" "new line" structs "new line" main
    4        | "program" "id" "new line" main

    5 functions: function
    6          | functions "new line" function

    7 $@1: %empty

    8 function: "function" "id" $@1 "left parenthesis" arguments "right parenthesis" "new line" body

    9 body: declare commands return "endfunction"

   10 declare: declare "vars" type variable "semicolon"
   11        | %empty

   12 return: "return" "number"
   13       | "return" "character"
   14       | "return" "id"

   15 variable: "id"
   16         | "id" "left bracket" "number" "right bracket"
   17         | variable "comma" variable

   18 type: "char"
   19     | "int"

   20 $@2: %empty

   21 main: "startmain" $@2 declare commands "endmain"

   22 commands: commands command
   23         | %empty

   24 command: command_assign
   25        | command_loop
   26        | command_check
   27        | print
   28        | break

   29 command_assign: "id" "assign" expression "semicolon"
   30               | "id" "assign" "character" "semicolon"

   31 expression: term
   32           | expression operator term

   33 term: factor
   34     | functioncall

   35 factor: "id"
   36       | "id" "left bracket" "number" "right bracket"
   37       | "number"
   38       | "left parenthesis" expression "right parenthesis"

   39 operator: "add"
   40         | "subtract"
   41         | "multiply"
   42         | "divide"
   43         | "power"

   44 functioncall: "id" "left parenthesis" variable "right parenthesis"

   45 arguments: argument
   46          | arguments "comma" argument
   47          | %empty

   48 argument: "vars" type "id"

   49 $@3: %empty

   50 command_loop: "while" "left parenthesis" condition "right parenthesis" $@3 commands "endwhile"

   51 $@4: %empty

   52 command_loop: "for" count "to" "number" "step" "number" $@4 commands "endfor"

   53 count: "id" "colon" "assign" "number"

   54 condition: expression condition_operator expression

   55 condition_operator: "less than"
   56                   | "greater than"
   57                   | "equal"
   58                   | "not equal"
   59                   | "and"
   60                   | "or"

   61 $@5: %empty

   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 "then" commands if_tail "endif"
   63              | "switch" "left parenthesis" expression "right parenthesis" cases "endswitch"

   64 cases: cases case
   65      | %empty

   66 $@6: %empty

   67 case: "case" "left parenthesis" expression "right parenthesis" "colon" $@6 commands

   68 $@7: %empty

   69 case: "default" "colon" $@7 commands

   70 $@8: %empty

   71 if_tail: if_tail "elseif" "left parenthesis" condition "right parenthesis" $@8 commands

   72 $@9: %empty

   73 if_tail: if_tail "else" $@9 commands
   74        | %empty

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" "id" "right bracket" "right parenthesis" "semicolon"

   76 break: "break" "semicolon"

   77 structs: struct
   78        | structs "new line" struct

   79 $@10: %empty

   80 struct: "struct" "id" $@10 "new line" declare "endstruct"

   81 $@11: %empty

   82 struct: "typedef" "struct" "id" $@11 "new line" declare "id" "endstruct"


Terminals, with rules where they appear

    T_EOF <strval> (0) 0
    error (256)
    "program" <strval> (258) 1 2 3 4
    "function" <strval> (259) 8
    "endfunction" <strval> (260) 9
    "struct" <strval> (261) 80 82
    "endstruct" <strval> (262) 80 82
    "typedef" <strval> (263) 82
    "vars" <strval> (264) 10 48
    "char" <strval> (265) 18
    "int" <strval> (266) 19
    "return" <strval> (267) 12 13 14
    "startmain" <strval> (268) 21
    "endmain" <strval> (269) 21
    "while" <strval> (270) 50
    "endwhile" <strval> (271) 50
    "for" <strval> (272) 52
    "to" <strval> (273) 52
    "step" <strval> (274) 52
    "endfor" <strval> (275) 52
    "if" <strval> (276) 62
    "then" <strval> (277) 62
    "else" <strval> (278) 73
    "elseif" <strval> (279) 71
    "endif" <strval> (280) 62
    "switch" <strval> (281) 63
    "case" <strval> (282) 67
    "default" <strval> (283) 69
    "endswitch" <strval> (284) 63
    "print" <strval> (285) 75
    "break" <strval> (286) 76
    "add" <strval> (287) 39
    "subtract" <strval> (288) 40
    "power" <strval> (289) 43
    "multiply" <strval> (290) 41
    "divide" <strval> (291) 42
    "less than" <strval> (292) 55
    "greater than" <strval> (293) 56
    "equal" <strval> (294) 57
    "not equal" <strval> (295) 58
    "and" <strval> (296) 59
    "or" <strval> (297) 60
    "assign" <strval> (298) 29 30 53
    "left parenthesis" <strval> (299) 8 38 44 50 62 63 67 71 75
    "right parenthesis" <strval> (300) 8 38 44 50 62 63 67 71 75
    "semicolon" <strval> (301) 10 29 30 75 76
    "comma" <strval> (302) 17 46 75
    "colon" <strval> (303) 53 67 69
    "left bracket" <strval> (304) 16 36 75
    "right bracket" <strval> (305) 16 36 75
    "new line" <strval> (306) 1 2 3 4 6 8 78 80 82
    "unknown" <strval> (307)
    "id" <strval> (308) 1 2 3 4 8 14 15 16 29 30 35 36 44 48 53 75 80 82
    "string" <strval> (309) 75
    "number" <intval> (310) 12 16 36 37 52 53
    "character" <strval> (311) 13 30
    LOWER_THAN_ELSE (312)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    program (59)
        on left: 1 2 3 4
        on right: 0
    functions (60)
        on left: 5 6
        on right: 1 2 6
    function (61)
        on left: 8
        on right: 5 6
    $@1 (62)
        on left: 7
        on right: 8
    body (63)
        on left: 9
        on right: 8
    declare (64)
        on left: 10 11
        on right: 9 10 21 80 82
    return (65)
        on left: 12 13 14
        on right: 9
    variable (66)
        on left: 15 16 17
        on right: 10 17 44
    type (67)
        on left: 18 19
        on right: 10 48
    main (68)
        on left: 21
        on right: 1 2 3 4
    $@2 (69)
        on left: 20
        on right: 21
    commands (70)
        on left: 22 23
        on right: 9 21 22 50 52 62 67 69 71 73
    command (71)
        on left: 24 25 26 27 28
        on right: 22
    command_assign (72)
        on left: 29 30
        on right: 24
    expression (73)
        on left: 31 32
        on right: 29 32 38 54 63 67
    term (74)
        on left: 33 34
        on right: 31 32
    factor (75)
        on left: 35 36 37 38
        on right: 33
    operator (76)
        on left: 39 40 41 42 43
        on right: 32
    functioncall (77)
        on left: 44
        on right: 34
    arguments (78)
        on left: 45 46 47
        on right: 8 46
    argument (79)
        on left: 48
        on right: 45 46
    command_loop (80)
        on left: 50 52
        on right: 25
    $@3 (81)
        on left: 49
        on right: 50
    $@4 (82)
        on left: 51
        on right: 52
    count (83)
        on left: 53
        on right: 52
    condition (84)
        on left: 54
        on right: 50 62 71
    condition_operator (85)
        on left: 55 56 57 58 59 60
        on right: 54
    command_check (86)
        on left: 62 63
        on right: 26
    $@5 (87)
        on left: 61
        on right: 62
    cases (88)
        on left: 64 65
        on right: 63 64
    case (89)
        on left: 67 69
        on right: 64
    $@6 (90)
        on left: 66
        on right: 67
    $@7 (91)
        on left: 68
        on right: 69
    if_tail (92)
        on left: 71 73 74
        on right: 62 71 73
    $@8 (93)
        on left: 70
        on right: 71
    $@9 (94)
        on left: 72
        on right: 73
    print (95)
        on left: 75
        on right: 27
    break (96)
        on left: 76
        on right: 28
    structs (97)
        on left: 77 78
        on right: 1 3 78
    struct (98)
        on left: 80 82
        on right: 77 78
    $@10 (99)
        on left: 79
        on right: 80
    $@11 (100)
        on left: 81
        on right: 82


State 0

    0 $accept: . program T_EOF

    "program"  shift, and go to state 1

    program  go to state 2


State 1

    1 program: "program" . "id" "new line" structs "new line" functions "new line" main
    2        | "program" . "id" "new line" functions "new line" main
    3        | "program" . "id" "new line" structs "new line" main
    4        | "program" . "id" "new line" main

    "id"  shift, and go to state 3


State 2

    0 $accept: program . T_EOF

    T_EOF  shift, and go to state 4


State 3

    1 program: "program" "id" . "new line" structs "new line" functions "new line" main
    2        | "program" "id" . "new line" functions "new line" main
    3        | "program" "id" . "new line" structs "new line" main
    4        | "program" "id" . "new line" main

    "new line"  shift, and go to state 5


State 4

    0 $accept: program T_EOF .

    $default  accept


State 5

    1 program: "program" "id" "new line" . structs "new line" functions "new line" main
    2        | "program" "id" "new line" . functions "new line" main
    3        | "program" "id" "new line" . structs "new line" main
    4        | "program" "id" "new line" . main

    "function"   shift, and go to state 6
    "struct"     shift, and go to state 7
    "typedef"    shift, and go to state 8
    "startmain"  shift, and go to state 9

    functions  go to state 10
    function   go to state 11
    main       go to state 12
    structs    go to state 13
    struct     go to state 14


State 6

    8 function: "function" . "id" $@1 "left parenthesis" arguments "right parenthesis" "new line" body

    "id"  shift, and go to state 15


State 7

   80 struct: "struct" . "id" $@10 "new line" declare "endstruct"

    "id"  shift, and go to state 16


State 8

   82 struct: "typedef" . "struct" "id" $@11 "new line" declare "id" "endstruct"

    "struct"  shift, and go to state 17


State 9

   21 main: "startmain" . $@2 declare commands "endmain"

    $default  reduce using rule 20 ($@2)

    $@2  go to state 18


State 10

    2 program: "program" "id" "new line" functions . "new line" main
    6 functions: functions . "new line" function

    "new line"  shift, and go to state 19


State 11

    5 functions: function .

    $default  reduce using rule 5 (functions)


State 12

    4 program: "program" "id" "new line" main .

    $default  reduce using rule 4 (program)


State 13

    1 program: "program" "id" "new line" structs . "new line" functions "new line" main
    3        | "program" "id" "new line" structs . "new line" main
   78 structs: structs . "new line" struct

    "new line"  shift, and go to state 20


State 14

   77 structs: struct .

    $default  reduce using rule 77 (structs)


State 15

    8 function: "function" "id" . $@1 "left parenthesis" arguments "right parenthesis" "new line" body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 21


State 16

   80 struct: "struct" "id" . $@10 "new line" declare "endstruct"

    $default  reduce using rule 79 ($@10)

    $@10  go to state 22


State 17

   82 struct: "typedef" "struct" . "id" $@11 "new line" declare "id" "endstruct"

    "id"  shift, and go to state 23


State 18

   21 main: "startmain" $@2 . declare commands "endmain"

    $default  reduce using rule 11 (declare)

    declare  go to state 24


State 19

    2 program: "program" "id" "new line" functions "new line" . main
    6 functions: functions "new line" . function

    "function"   shift, and go to state 6
    "startmain"  shift, and go to state 9

    function  go to state 25
    main      go to state 26


State 20

    1 program: "program" "id" "new line" structs "new line" . functions "new line" main
    3        | "program" "id" "new line" structs "new line" . main
   78 structs: structs "new line" . struct

    "function"   shift, and go to state 6
    "struct"     shift, and go to state 7
    "typedef"    shift, and go to state 8
    "startmain"  shift, and go to state 9

    functions  go to state 27
    function   go to state 11
    main       go to state 28
    struct     go to state 29


State 21

    8 function: "function" "id" $@1 . "left parenthesis" arguments "right parenthesis" "new line" body

    "left parenthesis"  shift, and go to state 30


State 22

   80 struct: "struct" "id" $@10 . "new line" declare "endstruct"

    "new line"  shift, and go to state 31


State 23

   82 struct: "typedef" "struct" "id" . $@11 "new line" declare "id" "endstruct"

    $default  reduce using rule 81 ($@11)

    $@11  go to state 32


State 24

   10 declare: declare . "vars" type variable "semicolon"
   21 main: "startmain" $@2 declare . commands "endmain"

    "vars"  shift, and go to state 33

    $default  reduce using rule 23 (commands)

    commands  go to state 34


State 25

    6 functions: functions "new line" function .

    $default  reduce using rule 6 (functions)


State 26

    2 program: "program" "id" "new line" functions "new line" main .

    $default  reduce using rule 2 (program)


State 27

    1 program: "program" "id" "new line" structs "new line" functions . "new line" main
    6 functions: functions . "new line" function

    "new line"  shift, and go to state 35


State 28

    3 program: "program" "id" "new line" structs "new line" main .

    $default  reduce using rule 3 (program)


State 29

   78 structs: structs "new line" struct .

    $default  reduce using rule 78 (structs)


State 30

    8 function: "function" "id" $@1 "left parenthesis" . arguments "right parenthesis" "new line" body

    "vars"  shift, and go to state 36

    $default  reduce using rule 47 (arguments)

    arguments  go to state 37
    argument   go to state 38


State 31

   80 struct: "struct" "id" $@10 "new line" . declare "endstruct"

    $default  reduce using rule 11 (declare)

    declare  go to state 39


State 32

   82 struct: "typedef" "struct" "id" $@11 . "new line" declare "id" "endstruct"

    "new line"  shift, and go to state 40


State 33

   10 declare: declare "vars" . type variable "semicolon"

    "char"  shift, and go to state 41
    "int"   shift, and go to state 42

    type  go to state 43


State 34

   21 main: "startmain" $@2 declare commands . "endmain"
   22 commands: commands . command

    "endmain"  shift, and go to state 44
    "while"    shift, and go to state 45
    "for"      shift, and go to state 46
    "if"       shift, and go to state 47
    "switch"   shift, and go to state 48
    "print"    shift, and go to state 49
    "break"    shift, and go to state 50
    "id"       shift, and go to state 51

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 35

    1 program: "program" "id" "new line" structs "new line" functions "new line" . main
    6 functions: functions "new line" . function

    "function"   shift, and go to state 6
    "startmain"  shift, and go to state 9

    function  go to state 25
    main      go to state 58


State 36

   48 argument: "vars" . type "id"

    "char"  shift, and go to state 41
    "int"   shift, and go to state 42

    type  go to state 59


State 37

    8 function: "function" "id" $@1 "left parenthesis" arguments . "right parenthesis" "new line" body
   46 arguments: arguments . "comma" argument

    "right parenthesis"  shift, and go to state 60
    "comma"              shift, and go to state 61


State 38

   45 arguments: argument .

    $default  reduce using rule 45 (arguments)


State 39

   10 declare: declare . "vars" type variable "semicolon"
   80 struct: "struct" "id" $@10 "new line" declare . "endstruct"

    "endstruct"  shift, and go to state 62
    "vars"       shift, and go to state 33


State 40

   82 struct: "typedef" "struct" "id" $@11 "new line" . declare "id" "endstruct"

    $default  reduce using rule 11 (declare)

    declare  go to state 63


State 41

   18 type: "char" .

    $default  reduce using rule 18 (type)


State 42

   19 type: "int" .

    $default  reduce using rule 19 (type)


State 43

   10 declare: declare "vars" type . variable "semicolon"

    "id"  shift, and go to state 64

    variable  go to state 65


State 44

   21 main: "startmain" $@2 declare commands "endmain" .

    $default  reduce using rule 21 (main)


State 45

   50 command_loop: "while" . "left parenthesis" condition "right parenthesis" $@3 commands "endwhile"

    "left parenthesis"  shift, and go to state 66


State 46

   52 command_loop: "for" . count "to" "number" "step" "number" $@4 commands "endfor"

    "id"  shift, and go to state 67

    count  go to state 68


State 47

   62 command_check: "if" . "left parenthesis" condition "right parenthesis" $@5 "then" commands if_tail "endif"

    "left parenthesis"  shift, and go to state 69


State 48

   63 command_check: "switch" . "left parenthesis" expression "right parenthesis" cases "endswitch"

    "left parenthesis"  shift, and go to state 70


State 49

   75 print: "print" . "left parenthesis" "string" "comma" "left bracket" "id" "right bracket" "right parenthesis" "semicolon"

    "left parenthesis"  shift, and go to state 71


State 50

   76 break: "break" . "semicolon"

    "semicolon"  shift, and go to state 72


State 51

   29 command_assign: "id" . "assign" expression "semicolon"
   30               | "id" . "assign" "character" "semicolon"

    "assign"  shift, and go to state 73


State 52

   22 commands: commands command .

    $default  reduce using rule 22 (commands)


State 53

   24 command: command_assign .

    $default  reduce using rule 24 (command)


State 54

   25 command: command_loop .

    $default  reduce using rule 25 (command)


State 55

   26 command: command_check .

    $default  reduce using rule 26 (command)


State 56

   27 command: print .

    $default  reduce using rule 27 (command)


State 57

   28 command: break .

    $default  reduce using rule 28 (command)


State 58

    1 program: "program" "id" "new line" structs "new line" functions "new line" main .

    $default  reduce using rule 1 (program)


State 59

   48 argument: "vars" type . "id"

    "id"  shift, and go to state 74


State 60

    8 function: "function" "id" $@1 "left parenthesis" arguments "right parenthesis" . "new line" body

    "new line"  shift, and go to state 75


State 61

   46 arguments: arguments "comma" . argument

    "vars"  shift, and go to state 36

    argument  go to state 76


State 62

   80 struct: "struct" "id" $@10 "new line" declare "endstruct" .

    $default  reduce using rule 80 (struct)


State 63

   10 declare: declare . "vars" type variable "semicolon"
   82 struct: "typedef" "struct" "id" $@11 "new line" declare . "id" "endstruct"

    "vars"  shift, and go to state 33
    "id"    shift, and go to state 77


State 64

   15 variable: "id" .
   16         | "id" . "left bracket" "number" "right bracket"

    "left bracket"  shift, and go to state 78

    $default  reduce using rule 15 (variable)


State 65

   10 declare: declare "vars" type variable . "semicolon"
   17 variable: variable . "comma" variable

    "semicolon"  shift, and go to state 79
    "comma"      shift, and go to state 80


State 66

   50 command_loop: "while" "left parenthesis" . condition "right parenthesis" $@3 commands "endwhile"

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 84
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87
    condition     go to state 88


State 67

   53 count: "id" . "colon" "assign" "number"

    "colon"  shift, and go to state 89


State 68

   52 command_loop: "for" count . "to" "number" "step" "number" $@4 commands "endfor"

    "to"  shift, and go to state 90


State 69

   62 command_check: "if" "left parenthesis" . condition "right parenthesis" $@5 "then" commands if_tail "endif"

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 84
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87
    condition     go to state 91


State 70

   63 command_check: "switch" "left parenthesis" . expression "right parenthesis" cases "endswitch"

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 92
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87


State 71

   75 print: "print" "left parenthesis" . "string" "comma" "left bracket" "id" "right bracket" "right parenthesis" "semicolon"

    "string"  shift, and go to state 93


State 72

   76 break: "break" "semicolon" .

    $default  reduce using rule 76 (break)


State 73

   29 command_assign: "id" "assign" . expression "semicolon"
   30               | "id" "assign" . "character" "semicolon"

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83
    "character"         shift, and go to state 94

    expression    go to state 95
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87


State 74

   48 argument: "vars" type "id" .

    $default  reduce using rule 48 (argument)


State 75

    8 function: "function" "id" $@1 "left parenthesis" arguments "right parenthesis" "new line" . body

    $default  reduce using rule 11 (declare)

    body     go to state 96
    declare  go to state 97


State 76

   46 arguments: arguments "comma" argument .

    $default  reduce using rule 46 (arguments)


State 77

   82 struct: "typedef" "struct" "id" $@11 "new line" declare "id" . "endstruct"

    "endstruct"  shift, and go to state 98


State 78

   16 variable: "id" "left bracket" . "number" "right bracket"

    "number"  shift, and go to state 99


State 79

   10 declare: declare "vars" type variable "semicolon" .

    $default  reduce using rule 10 (declare)


State 80

   17 variable: variable "comma" . variable

    "id"  shift, and go to state 64

    variable  go to state 100


State 81

   38 factor: "left parenthesis" . expression "right parenthesis"

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 101
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87


State 82

   35 factor: "id" .
   36       | "id" . "left bracket" "number" "right bracket"
   44 functioncall: "id" . "left parenthesis" variable "right parenthesis"

    "left parenthesis"  shift, and go to state 102
    "left bracket"      shift, and go to state 103

    $default  reduce using rule 35 (factor)


State 83

   37 factor: "number" .

    $default  reduce using rule 37 (factor)


State 84

   32 expression: expression . operator term
   54 condition: expression . condition_operator expression

    "add"           shift, and go to state 104
    "subtract"      shift, and go to state 105
    "power"         shift, and go to state 106
    "multiply"      shift, and go to state 107
    "divide"        shift, and go to state 108
    "less than"     shift, and go to state 109
    "greater than"  shift, and go to state 110
    "equal"         shift, and go to state 111
    "not equal"     shift, and go to state 112
    "and"           shift, and go to state 113
    "or"            shift, and go to state 114

    operator            go to state 115
    condition_operator  go to state 116


State 85

   31 expression: term .

    $default  reduce using rule 31 (expression)


State 86

   33 term: factor .

    $default  reduce using rule 33 (term)


State 87

   34 term: functioncall .

    $default  reduce using rule 34 (term)


State 88

   50 command_loop: "while" "left parenthesis" condition . "right parenthesis" $@3 commands "endwhile"

    "right parenthesis"  shift, and go to state 117


State 89

   53 count: "id" "colon" . "assign" "number"

    "assign"  shift, and go to state 118


State 90

   52 command_loop: "for" count "to" . "number" "step" "number" $@4 commands "endfor"

    "number"  shift, and go to state 119


State 91

   62 command_check: "if" "left parenthesis" condition . "right parenthesis" $@5 "then" commands if_tail "endif"

    "right parenthesis"  shift, and go to state 120


State 92

   32 expression: expression . operator term
   63 command_check: "switch" "left parenthesis" expression . "right parenthesis" cases "endswitch"

    "add"                shift, and go to state 104
    "subtract"           shift, and go to state 105
    "power"              shift, and go to state 106
    "multiply"           shift, and go to state 107
    "divide"             shift, and go to state 108
    "right parenthesis"  shift, and go to state 121

    operator  go to state 115


State 93

   75 print: "print" "left parenthesis" "string" . "comma" "left bracket" "id" "right bracket" "right parenthesis" "semicolon"

    "comma"  shift, and go to state 122


State 94

   30 command_assign: "id" "assign" "character" . "semicolon"

    "semicolon"  shift, and go to state 123


State 95

   29 command_assign: "id" "assign" expression . "semicolon"
   32 expression: expression . operator term

    "add"        shift, and go to state 104
    "subtract"   shift, and go to state 105
    "power"      shift, and go to state 106
    "multiply"   shift, and go to state 107
    "divide"     shift, and go to state 108
    "semicolon"  shift, and go to state 124

    operator  go to state 115


State 96

    8 function: "function" "id" $@1 "left parenthesis" arguments "right parenthesis" "new line" body .

    $default  reduce using rule 8 (function)


State 97

    9 body: declare . commands return "endfunction"
   10 declare: declare . "vars" type variable "semicolon"

    "vars"  shift, and go to state 33

    $default  reduce using rule 23 (commands)

    commands  go to state 125


State 98

   82 struct: "typedef" "struct" "id" $@11 "new line" declare "id" "endstruct" .

    $default  reduce using rule 82 (struct)


State 99

   16 variable: "id" "left bracket" "number" . "right bracket"

    "right bracket"  shift, and go to state 126


State 100

   17 variable: variable . "comma" variable
   17         | variable "comma" variable .

    $default  reduce using rule 17 (variable)


State 101

   32 expression: expression . operator term
   38 factor: "left parenthesis" expression . "right parenthesis"

    "add"                shift, and go to state 104
    "subtract"           shift, and go to state 105
    "power"              shift, and go to state 106
    "multiply"           shift, and go to state 107
    "divide"             shift, and go to state 108
    "right parenthesis"  shift, and go to state 127

    operator  go to state 115


State 102

   44 functioncall: "id" "left parenthesis" . variable "right parenthesis"

    "id"  shift, and go to state 64

    variable  go to state 128


State 103

   36 factor: "id" "left bracket" . "number" "right bracket"

    "number"  shift, and go to state 129


State 104

   39 operator: "add" .

    $default  reduce using rule 39 (operator)


State 105

   40 operator: "subtract" .

    $default  reduce using rule 40 (operator)


State 106

   43 operator: "power" .

    $default  reduce using rule 43 (operator)


State 107

   41 operator: "multiply" .

    $default  reduce using rule 41 (operator)


State 108

   42 operator: "divide" .

    $default  reduce using rule 42 (operator)


State 109

   55 condition_operator: "less than" .

    $default  reduce using rule 55 (condition_operator)


State 110

   56 condition_operator: "greater than" .

    $default  reduce using rule 56 (condition_operator)


State 111

   57 condition_operator: "equal" .

    $default  reduce using rule 57 (condition_operator)


State 112

   58 condition_operator: "not equal" .

    $default  reduce using rule 58 (condition_operator)


State 113

   59 condition_operator: "and" .

    $default  reduce using rule 59 (condition_operator)


State 114

   60 condition_operator: "or" .

    $default  reduce using rule 60 (condition_operator)


State 115

   32 expression: expression operator . term

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    term          go to state 130
    factor        go to state 86
    functioncall  go to state 87


State 116

   54 condition: expression condition_operator . expression

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 131
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87


State 117

   50 command_loop: "while" "left parenthesis" condition "right parenthesis" . $@3 commands "endwhile"

    $default  reduce using rule 49 ($@3)

    $@3  go to state 132


State 118

   53 count: "id" "colon" "assign" . "number"

    "number"  shift, and go to state 133


State 119

   52 command_loop: "for" count "to" "number" . "step" "number" $@4 commands "endfor"

    "step"  shift, and go to state 134


State 120

   62 command_check: "if" "left parenthesis" condition "right parenthesis" . $@5 "then" commands if_tail "endif"

    $default  reduce using rule 61 ($@5)

    $@5  go to state 135


State 121

   63 command_check: "switch" "left parenthesis" expression "right parenthesis" . cases "endswitch"

    $default  reduce using rule 65 (cases)

    cases  go to state 136


State 122

   75 print: "print" "left parenthesis" "string" "comma" . "left bracket" "id" "right bracket" "right parenthesis" "semicolon"

    "left bracket"  shift, and go to state 137


State 123

   30 command_assign: "id" "assign" "character" "semicolon" .

    $default  reduce using rule 30 (command_assign)


State 124

   29 command_assign: "id" "assign" expression "semicolon" .

    $default  reduce using rule 29 (command_assign)


State 125

    9 body: declare commands . return "endfunction"
   22 commands: commands . command

    "return"  shift, and go to state 138
    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    return          go to state 139
    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 126

   16 variable: "id" "left bracket" "number" "right bracket" .

    $default  reduce using rule 16 (variable)


State 127

   38 factor: "left parenthesis" expression "right parenthesis" .

    $default  reduce using rule 38 (factor)


State 128

   17 variable: variable . "comma" variable
   44 functioncall: "id" "left parenthesis" variable . "right parenthesis"

    "right parenthesis"  shift, and go to state 140
    "comma"              shift, and go to state 80


State 129

   36 factor: "id" "left bracket" "number" . "right bracket"

    "right bracket"  shift, and go to state 141


State 130

   32 expression: expression operator term .

    $default  reduce using rule 32 (expression)


State 131

   32 expression: expression . operator term
   54 condition: expression condition_operator expression .

    "add"       shift, and go to state 104
    "subtract"  shift, and go to state 105
    "power"     shift, and go to state 106
    "multiply"  shift, and go to state 107
    "divide"    shift, and go to state 108

    $default  reduce using rule 54 (condition)

    operator  go to state 115


State 132

   50 command_loop: "while" "left parenthesis" condition "right parenthesis" $@3 . commands "endwhile"

    $default  reduce using rule 23 (commands)

    commands  go to state 142


State 133

   53 count: "id" "colon" "assign" "number" .

    $default  reduce using rule 53 (count)


State 134

   52 command_loop: "for" count "to" "number" "step" . "number" $@4 commands "endfor"

    "number"  shift, and go to state 143


State 135

   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 . "then" commands if_tail "endif"

    "then"  shift, and go to state 144


State 136

   63 command_check: "switch" "left parenthesis" expression "right parenthesis" cases . "endswitch"
   64 cases: cases . case

    "case"       shift, and go to state 145
    "default"    shift, and go to state 146
    "endswitch"  shift, and go to state 147

    case  go to state 148


State 137

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" . "id" "right bracket" "right parenthesis" "semicolon"

    "id"  shift, and go to state 149


State 138

   12 return: "return" . "number"
   13       | "return" . "character"
   14       | "return" . "id"

    "id"         shift, and go to state 150
    "number"     shift, and go to state 151
    "character"  shift, and go to state 152


State 139

    9 body: declare commands return . "endfunction"

    "endfunction"  shift, and go to state 153


State 140

   44 functioncall: "id" "left parenthesis" variable "right parenthesis" .

    $default  reduce using rule 44 (functioncall)


State 141

   36 factor: "id" "left bracket" "number" "right bracket" .

    $default  reduce using rule 36 (factor)


State 142

   22 commands: commands . command
   50 command_loop: "while" "left parenthesis" condition "right parenthesis" $@3 commands . "endwhile"

    "while"     shift, and go to state 45
    "endwhile"  shift, and go to state 154
    "for"       shift, and go to state 46
    "if"        shift, and go to state 47
    "switch"    shift, and go to state 48
    "print"     shift, and go to state 49
    "break"     shift, and go to state 50
    "id"        shift, and go to state 51

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 143

   52 command_loop: "for" count "to" "number" "step" "number" . $@4 commands "endfor"

    $default  reduce using rule 51 ($@4)

    $@4  go to state 155


State 144

   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 "then" . commands if_tail "endif"

    $default  reduce using rule 23 (commands)

    commands  go to state 156


State 145

   67 case: "case" . "left parenthesis" expression "right parenthesis" "colon" $@6 commands

    "left parenthesis"  shift, and go to state 157


State 146

   69 case: "default" . "colon" $@7 commands

    "colon"  shift, and go to state 158


State 147

   63 command_check: "switch" "left parenthesis" expression "right parenthesis" cases "endswitch" .

    $default  reduce using rule 63 (command_check)


State 148

   64 cases: cases case .

    $default  reduce using rule 64 (cases)


State 149

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" "id" . "right bracket" "right parenthesis" "semicolon"

    "right bracket"  shift, and go to state 159


State 150

   14 return: "return" "id" .

    $default  reduce using rule 14 (return)


State 151

   12 return: "return" "number" .

    $default  reduce using rule 12 (return)


State 152

   13 return: "return" "character" .

    $default  reduce using rule 13 (return)


State 153

    9 body: declare commands return "endfunction" .

    $default  reduce using rule 9 (body)


State 154

   50 command_loop: "while" "left parenthesis" condition "right parenthesis" $@3 commands "endwhile" .

    $default  reduce using rule 50 (command_loop)


State 155

   52 command_loop: "for" count "to" "number" "step" "number" $@4 . commands "endfor"

    $default  reduce using rule 23 (commands)

    commands  go to state 160


State 156

   22 commands: commands . command
   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 "then" commands . if_tail "endif"

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    $default  reduce using rule 74 (if_tail)

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    if_tail         go to state 161
    print           go to state 56
    break           go to state 57


State 157

   67 case: "case" "left parenthesis" . expression "right parenthesis" "colon" $@6 commands

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 162
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87


State 158

   69 case: "default" "colon" . $@7 commands

    $default  reduce using rule 68 ($@7)

    $@7  go to state 163


State 159

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" "id" "right bracket" . "right parenthesis" "semicolon"

    "right parenthesis"  shift, and go to state 164


State 160

   22 commands: commands . command
   52 command_loop: "for" count "to" "number" "step" "number" $@4 commands . "endfor"

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "endfor"  shift, and go to state 165
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 161

   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 "then" commands if_tail . "endif"
   71 if_tail: if_tail . "elseif" "left parenthesis" condition "right parenthesis" $@8 commands
   73        | if_tail . "else" $@9 commands

    "else"    shift, and go to state 166
    "elseif"  shift, and go to state 167
    "endif"   shift, and go to state 168


State 162

   32 expression: expression . operator term
   67 case: "case" "left parenthesis" expression . "right parenthesis" "colon" $@6 commands

    "add"                shift, and go to state 104
    "subtract"           shift, and go to state 105
    "power"              shift, and go to state 106
    "multiply"           shift, and go to state 107
    "divide"             shift, and go to state 108
    "right parenthesis"  shift, and go to state 169

    operator  go to state 115


State 163

   69 case: "default" "colon" $@7 . commands

    $default  reduce using rule 23 (commands)

    commands  go to state 170


State 164

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" "id" "right bracket" "right parenthesis" . "semicolon"

    "semicolon"  shift, and go to state 171


State 165

   52 command_loop: "for" count "to" "number" "step" "number" $@4 commands "endfor" .

    $default  reduce using rule 52 (command_loop)


State 166

   73 if_tail: if_tail "else" . $@9 commands

    $default  reduce using rule 72 ($@9)

    $@9  go to state 172


State 167

   71 if_tail: if_tail "elseif" . "left parenthesis" condition "right parenthesis" $@8 commands

    "left parenthesis"  shift, and go to state 173


State 168

   62 command_check: "if" "left parenthesis" condition "right parenthesis" $@5 "then" commands if_tail "endif" .

    $default  reduce using rule 62 (command_check)


State 169

   67 case: "case" "left parenthesis" expression "right parenthesis" . "colon" $@6 commands

    "colon"  shift, and go to state 174


State 170

   22 commands: commands . command
   69 case: "default" "colon" $@7 commands .

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    $default  reduce using rule 69 (case)

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 171

   75 print: "print" "left parenthesis" "string" "comma" "left bracket" "id" "right bracket" "right parenthesis" "semicolon" .

    $default  reduce using rule 75 (print)


State 172

   73 if_tail: if_tail "else" $@9 . commands

    $default  reduce using rule 23 (commands)

    commands  go to state 175


State 173

   71 if_tail: if_tail "elseif" "left parenthesis" . condition "right parenthesis" $@8 commands

    "left parenthesis"  shift, and go to state 81
    "id"                shift, and go to state 82
    "number"            shift, and go to state 83

    expression    go to state 84
    term          go to state 85
    factor        go to state 86
    functioncall  go to state 87
    condition     go to state 176


State 174

   67 case: "case" "left parenthesis" expression "right parenthesis" "colon" . $@6 commands

    $default  reduce using rule 66 ($@6)

    $@6  go to state 177


State 175

   22 commands: commands . command
   73 if_tail: if_tail "else" $@9 commands .

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    $default  reduce using rule 73 (if_tail)

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 176

   71 if_tail: if_tail "elseif" "left parenthesis" condition . "right parenthesis" $@8 commands

    "right parenthesis"  shift, and go to state 178


State 177

   67 case: "case" "left parenthesis" expression "right parenthesis" "colon" $@6 . commands

    $default  reduce using rule 23 (commands)

    commands  go to state 179


State 178

   71 if_tail: if_tail "elseif" "left parenthesis" condition "right parenthesis" . $@8 commands

    $default  reduce using rule 70 ($@8)

    $@8  go to state 180


State 179

   22 commands: commands . command
   67 case: "case" "left parenthesis" expression "right parenthesis" "colon" $@6 commands .

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    $default  reduce using rule 67 (case)

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57


State 180

   71 if_tail: if_tail "elseif" "left parenthesis" condition "right parenthesis" $@8 . commands

    $default  reduce using rule 23 (commands)

    commands  go to state 181


State 181

   22 commands: commands . command
   71 if_tail: if_tail "elseif" "left parenthesis" condition "right parenthesis" $@8 commands .

    "while"   shift, and go to state 45
    "for"     shift, and go to state 46
    "if"      shift, and go to state 47
    "switch"  shift, and go to state 48
    "print"   shift, and go to state 49
    "break"   shift, and go to state 50
    "id"      shift, and go to state 51

    $default  reduce using rule 71 (if_tail)

    command         go to state 52
    command_assign  go to state 53
    command_loop    go to state 54
    command_check   go to state 55
    print           go to state 56
    break           go to state 57
